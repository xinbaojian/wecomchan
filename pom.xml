<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.6</version>
        <relativePath/>
    </parent>
    <groupId>xin.xiuyuan</groupId>
    <artifactId>wecomchan</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>wecomchan</name>
    <description>wecomchan</description>
    <properties>
        <java.version>1.8</java.version>
        <hutool.version>5.7.18</hutool.version>
        <!-- docker 打包插件 -->
        <docker.plugin.version>0.38.0</docker.plugin.version>
        <!-- docker 暴漏端口,如果是多个请重写插件 ports -->
        <docker.expose>8080:8080</docker.expose>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>xin.xiuyuan.wecomchan.WecomchanApplication</mainClass>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 引入此插件,必须在子模块pom插件中引入 spring-boot-maven-plugin -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.plugin.version}</version>
                <configuration>
                    <dockerHost>tcp://localhost:2375</dockerHost>
                    <!-- 显示完整控制台打包输出 -->
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <name>registry.cn-hangzhou.aliyuncs.com/xinbj/${project.artifactId}</name>
                            <build>
                                <!-- 基础镜像 -->
                                <from>registry.cn-hangzhou.aliyuncs.com/xinbj/java:8u281</from>
                                <!-- 镜像标签 -->
                                <tags>
                                    <tag>${project.version}</tag>
                                </tags>
                                <!-- 复制jar包 -->
                                <assembly>
                                    <targetDir>/app</targetDir>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <!-- 镜像入口点 -->
                                <entryPoint>
                                    <shell>java -Xms64m -Xmx128m -Dfile.encoding=utf-8 -Djava.security.edg=file:/dev/./urandom -jar /app/${project.artifactId}.jar</shell>
                                </entryPoint>
                            </build>
                            <run>
                                <!-- 映射端口:容器端口 -->
                                <ports>
                                    <port>${docker.expose}</port>
                                </ports>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <url>http://nexus.qi-tech.com.cn/repository/maven-releases/</url>
            <uniqueVersion>false</uniqueVersion>
            <layout>default</layout>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <url>http://nexus.qi-tech.com.cn/repository/maven-snapshots/</url>
            <uniqueVersion>false</uniqueVersion>
            <layout>default</layout>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <!-- 可以设置多个repository，在实际的开发过程中会从中心仓库取到 -->
        <repository>
            <id>nexus-maven</id>
            <name>nexus-maven Repository</name>
            <url>http://nexus.qi-tech.com.cn/repository/maven-public/</url>
        </repository>
    </repositories>

</project>
